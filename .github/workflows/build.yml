name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis relevancy

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'  # Ensure this matches the .NET version used in your project

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Check SonarQube server availability
        run: |
          echo "Checking SonarQube server accessibility..."
          curl -v ${{ secrets.SONAR_HOST_URL }}/api/server/version

      - name: SonarQube Begin Analysis
        shell: powershell
        run: |
          echo "Starting SonarQube analysis..."
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"potnuruvarun_ProjectZ-.net_0c3aad13-89da-45d5-b651-d9f2d8c93cde" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" || exit 1

      - name: Build Solution
        shell: powershell
        run: |
          dotnet build

      - name: SonarQube End Analysis
        shell: powershell
        run: |
          echo "Ending SonarQube analysis..."
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}" || exit 1
