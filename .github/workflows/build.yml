name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool install dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: List repository files
        run: dir

      - name: Begin SonarQube analysis
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"potnuruvarun_ProjectZ-.net_0417f66c-e718-4570-9a15-0d03e3a3f71f" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
        continue-on-error: true

      - name: List .sonarqube directory
        run: |
          if (Test-Path -Path .\.sonarqube) {
            Get-ChildItem -Path .\.sonarqube -Recurse
          } else {
            Write-Output ".sonarqube directory not found."
          }

      - name: Build project
        shell: powershell
        run: dotnet build

      - name: End SonarQube analysis
        shell: powershell
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Display SonarQubeAnalysisConfig.xml
        run: |
          if (Test-Path -Path .\.sonarqube\conf\SonarQubeAnalysisConfig.xml) {
            Get-Content -Path .\.sonarqube\conf\SonarQubeAnalysisConfig.xml
          } else {
            Write-Output "SonarQubeAnalysisConfig.xml not found."
          }
